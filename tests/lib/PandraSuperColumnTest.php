<?php
require_once 'PHPUnit/Framework.php';
require_once(dirname(__FILE__).'/../../config.php');

// SuperColumn wrapper
class TestSuperColumn extends PandraSuperColumn {
    public function constructColumns() {
        $this->addColumn('city', 'string');
        $this->addColumn('street', 'string');
        $this->addColumn('zip', 'int');
    }
}

// ColumnFamily (SuperColumn Wrapper)
class TestCFSuper extends PandraColumnFamilySuper {
    var $keySpace = 'Keyspace1';
    var $name = 'Super1';
}

/**
 * Test class for PandraColumn.
 * Generated by PHPUnit on 2010-01-09 at 11:52:23.
 */
class PandraSuperColumnTest extends PHPUnit_Framework_TestCase {

    // The supercolumn object we're testing
    public $obj = NULL;

    // parent column family
    public $parentCF = NULL;

    // key id
    public $keyID = 'PandraCFTest_Super';

    // supercolumn name
    public $superName = 'address1';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * To test multiple nodes, add their connection strings here
     *
     * @access protected
     */
    protected function setUp() {
        $this->parentCF = new TestCFSuper();
        $this->parentCF->keyID = $this->keyID;
        $this->obj = new TestSuperColumn($this->superName, $this->parentCF);
        
        Pandra::connect('default', 'localhost');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
        Pandra::disconnectAll();
    }

    public function testSetParentCF() {
        $newCF = new TestCFSuper();
        $this->obj->setParentCF($newCF);

        $this->assertEquals($newCF, $this->obj->getParentCF());
    }

    public function testGetParentCF() {
        $cf = $this->obj->getParentCF();
        $this->assertTrue($cf instanceof PandraColumnContainer);
    }

    public function testSave() {

        // this could also be $this->obj->column_city = 'SOME CITY';
        $this->obj->getColumn('city')->setValue('SOME CITY');
        $this->obj->getColumn('street')->setValue('MY STREET');
        $this->obj->getColumn('zip')->setValue('123654');

        $this->assertTrue($this->obj->save());
    }

    public function testLoad() {
        
    }

}
?>